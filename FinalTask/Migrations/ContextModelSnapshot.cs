// <auto-generated />
using System;
using FinalTask.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinalTask.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinalTask.Models.Artist", b =>
                {
                    b.Property<int>("IdArtist")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdArtist")
                        .HasName("Artist_PK");

                    b.ToTable("Atist");

                    b.HasData(
                        new
                        {
                            IdArtist = 1,
                            Nickname = "Ceswer"
                        },
                        new
                        {
                            IdArtist = 2,
                            Nickname = "BullDog"
                        },
                        new
                        {
                            IdArtist = 3,
                            Nickname = "Nie wiem"
                        },
                        new
                        {
                            IdArtist = 4,
                            Nickname = "Losowy nickname"
                        },
                        new
                        {
                            IdArtist = 5,
                            Nickname = "Help me!!!"
                        });
                });

            modelBuilder.Entity("FinalTask.Models.ArtistEvent", b =>
                {
                    b.Property<int>("IdArtist")
                        .HasColumnType("int");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int");

                    b.Property<DateTime>("PerfomanceDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdArtist", "IdEvent")
                        .HasName("ArtistEvent_PK");

                    b.HasIndex("IdEvent");

                    b.ToTable("Artist_Event");

                    b.HasData(
                        new
                        {
                            IdArtist = 1,
                            IdEvent = 1,
                            PerfomanceDate = new DateTime(2021, 4, 21, 14, 1, 27, 317, DateTimeKind.Local).AddTicks(703)
                        },
                        new
                        {
                            IdArtist = 2,
                            IdEvent = 2,
                            PerfomanceDate = new DateTime(2021, 4, 21, 14, 1, 27, 321, DateTimeKind.Local).AddTicks(3246)
                        },
                        new
                        {
                            IdArtist = 1,
                            IdEvent = 2,
                            PerfomanceDate = new DateTime(2021, 4, 21, 14, 1, 27, 321, DateTimeKind.Local).AddTicks(3286)
                        },
                        new
                        {
                            IdArtist = 2,
                            IdEvent = 1,
                            PerfomanceDate = new DateTime(2021, 4, 21, 14, 1, 27, 321, DateTimeKind.Local).AddTicks(3292)
                        },
                        new
                        {
                            IdArtist = 1,
                            IdEvent = 3,
                            PerfomanceDate = new DateTime(2021, 4, 21, 14, 1, 27, 321, DateTimeKind.Local).AddTicks(3296)
                        },
                        new
                        {
                            IdArtist = 3,
                            IdEvent = 1,
                            PerfomanceDate = new DateTime(2021, 4, 21, 14, 1, 27, 321, DateTimeKind.Local).AddTicks(3305)
                        },
                        new
                        {
                            IdArtist = 4,
                            IdEvent = 2,
                            PerfomanceDate = new DateTime(2021, 4, 21, 14, 1, 27, 321, DateTimeKind.Local).AddTicks(3309)
                        },
                        new
                        {
                            IdArtist = 2,
                            IdEvent = 3,
                            PerfomanceDate = new DateTime(2021, 4, 21, 14, 1, 27, 321, DateTimeKind.Local).AddTicks(3312)
                        });
                });

            modelBuilder.Entity("FinalTask.Models.Event", b =>
                {
                    b.Property<int>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdEvent")
                        .HasName("IdEvent_PK");

                    b.ToTable("Event");

                    b.HasData(
                        new
                        {
                            IdEvent = 1,
                            EndDate = new DateTime(2021, 5, 31, 14, 1, 27, 326, DateTimeKind.Local).AddTicks(845),
                            Name = "EventSample",
                            StartDate = new DateTime(2021, 4, 21, 14, 1, 27, 326, DateTimeKind.Local).AddTicks(185)
                        },
                        new
                        {
                            IdEvent = 2,
                            EndDate = new DateTime(2021, 5, 31, 14, 1, 27, 326, DateTimeKind.Local).AddTicks(1444),
                            Name = "Hololulu",
                            StartDate = new DateTime(2021, 4, 21, 14, 1, 27, 326, DateTimeKind.Local).AddTicks(1431)
                        },
                        new
                        {
                            IdEvent = 3,
                            EndDate = new DateTime(2021, 5, 31, 14, 1, 27, 326, DateTimeKind.Local).AddTicks(1452),
                            Name = "Ceswer Party",
                            StartDate = new DateTime(2021, 4, 21, 14, 1, 27, 326, DateTimeKind.Local).AddTicks(1449)
                        },
                        new
                        {
                            IdEvent = 4,
                            EndDate = new DateTime(2021, 5, 31, 14, 1, 27, 326, DateTimeKind.Local).AddTicks(1523),
                            Name = "Cant do it faster",
                            StartDate = new DateTime(2021, 4, 21, 14, 1, 27, 326, DateTimeKind.Local).AddTicks(1520)
                        },
                        new
                        {
                            IdEvent = 5,
                            EndDate = new DateTime(2021, 5, 31, 14, 1, 27, 326, DateTimeKind.Local).AddTicks(1530),
                            Name = "Sea Horses Party",
                            StartDate = new DateTime(2021, 4, 21, 14, 1, 27, 326, DateTimeKind.Local).AddTicks(1527)
                        },
                        new
                        {
                            IdEvent = 6,
                            EndDate = new DateTime(2021, 5, 31, 14, 1, 27, 326, DateTimeKind.Local).AddTicks(1541),
                            Name = "For being quick party",
                            StartDate = new DateTime(2021, 4, 21, 14, 1, 27, 326, DateTimeKind.Local).AddTicks(1538)
                        },
                        new
                        {
                            IdEvent = 7,
                            EndDate = new DateTime(2021, 5, 31, 14, 1, 27, 326, DateTimeKind.Local).AddTicks(1547),
                            Name = "One more party",
                            StartDate = new DateTime(2021, 4, 21, 14, 1, 27, 326, DateTimeKind.Local).AddTicks(1545)
                        });
                });

            modelBuilder.Entity("FinalTask.Models.EventOrganiser", b =>
                {
                    b.Property<int>("IdOrganiser")
                        .HasColumnType("int");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int");

                    b.HasKey("IdOrganiser", "IdEvent")
                        .HasName("EventOrganiser_PK");

                    b.HasIndex("IdEvent");

                    b.ToTable("Event_Organiser");

                    b.HasData(
                        new
                        {
                            IdOrganiser = 1,
                            IdEvent = 1
                        },
                        new
                        {
                            IdOrganiser = 2,
                            IdEvent = 2
                        },
                        new
                        {
                            IdOrganiser = 1,
                            IdEvent = 2
                        },
                        new
                        {
                            IdOrganiser = 2,
                            IdEvent = 1
                        },
                        new
                        {
                            IdOrganiser = 2,
                            IdEvent = 3
                        });
                });

            modelBuilder.Entity("FinalTask.Models.Organiser", b =>
                {
                    b.Property<int>("IdOrganiser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdOrganiser")
                        .HasName("Organiser_PK");

                    b.ToTable("Organiser");

                    b.HasData(
                        new
                        {
                            IdOrganiser = 1,
                            Name = "Ceswer"
                        },
                        new
                        {
                            IdOrganiser = 2,
                            Name = "Kowalski"
                        },
                        new
                        {
                            IdOrganiser = 3,
                            Name = "Piotrowski"
                        },
                        new
                        {
                            IdOrganiser = 4,
                            Name = "Nazarii"
                        },
                        new
                        {
                            IdOrganiser = 5,
                            Name = "Sample"
                        },
                        new
                        {
                            IdOrganiser = 6,
                            Name = "One by one"
                        });
                });

            modelBuilder.Entity("FinalTask.Models.ArtistEvent", b =>
                {
                    b.HasOne("FinalTask.Models.Artist", "IdArtistNav")
                        .WithMany("ArtistEvents")
                        .HasForeignKey("IdArtist")
                        .HasConstraintName("Artist_Event_PK")
                        .IsRequired();

                    b.HasOne("FinalTask.Models.Event", "IdEventNav")
                        .WithMany("ArtistEvents")
                        .HasForeignKey("IdEvent")
                        .HasConstraintName("Event_Artist_PK")
                        .IsRequired();

                    b.Navigation("IdArtistNav");

                    b.Navigation("IdEventNav");
                });

            modelBuilder.Entity("FinalTask.Models.EventOrganiser", b =>
                {
                    b.HasOne("FinalTask.Models.Event", "IdEventNav")
                        .WithMany("EventOrganisers")
                        .HasForeignKey("IdEvent")
                        .HasConstraintName("Event_Organiser_PK")
                        .IsRequired();

                    b.HasOne("FinalTask.Models.Organiser", "IdOrganiserNav")
                        .WithMany("EventOrganisers")
                        .HasForeignKey("IdEvent")
                        .HasConstraintName("Organiser_Event_PK")
                        .IsRequired();

                    b.Navigation("IdEventNav");

                    b.Navigation("IdOrganiserNav");
                });

            modelBuilder.Entity("FinalTask.Models.Artist", b =>
                {
                    b.Navigation("ArtistEvents");
                });

            modelBuilder.Entity("FinalTask.Models.Event", b =>
                {
                    b.Navigation("ArtistEvents");

                    b.Navigation("EventOrganisers");
                });

            modelBuilder.Entity("FinalTask.Models.Organiser", b =>
                {
                    b.Navigation("EventOrganisers");
                });
#pragma warning restore 612, 618
        }
    }
}
